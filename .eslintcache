[{"D:\\informativeSite\\adminpanel\\src\\index.js":"1","D:\\informativeSite\\adminpanel\\src\\store.js":"2","D:\\informativeSite\\adminpanel\\src\\Pages\\Login\\Login.js":"3","D:\\informativeSite\\adminpanel\\src\\Component\\TextError\\TextError.js":"4","D:\\informativeSite\\adminpanel\\src\\utils\\config.js":"5","D:\\informativeSite\\adminpanel\\src\\reportWebVitals.js":"6","D:\\informativeSite\\adminpanel\\src\\Dashboard\\Sidebar\\Sidebar.js":"7","D:\\informativeSite\\adminpanel\\src\\Pages\\PageNotFound\\PageNotFound.js":"8","D:\\informativeSite\\adminpanel\\src\\Reducer\\index.js":"9","D:\\informativeSite\\adminpanel\\src\\Reducer\\alert.js":"10","D:\\informativeSite\\adminpanel\\src\\App.js":"11","D:\\informativeSite\\adminpanel\\src\\Dashboard\\Header\\Header.js":"12","D:\\informativeSite\\adminpanel\\src\\Pages\\Home\\index.js":"13","D:\\informativeSite\\adminpanel\\src\\Component\\Alert\\Alert.js":"14","D:\\informativeSite\\adminpanel\\src\\Action\\types.js":"15","D:\\informativeSite\\adminpanel\\src\\utils\\api.js":"16","D:\\informativeSite\\adminpanel\\src\\Pages\\MainSlider\\CreateMainSlider.js":"17","D:\\informativeSite\\adminpanel\\src\\Action\\message.js":"18","D:\\informativeSite\\adminpanel\\src\\Pages\\MainSlider\\MainSlider.js":"19"},{"size":699,"mtime":1609145006899,"results":"20","hashOfConfig":"21"},{"size":392,"mtime":1609142575824,"results":"22","hashOfConfig":"21"},{"size":3547,"mtime":1609147170039,"results":"23","hashOfConfig":"21"},{"size":191,"mtime":1609143398173,"results":"24","hashOfConfig":"21"},{"size":57,"mtime":1609143215813,"results":"25","hashOfConfig":"21"},{"size":362,"mtime":1608708625648,"results":"26","hashOfConfig":"21"},{"size":2744,"mtime":1609149354787,"results":"27","hashOfConfig":"21"},{"size":632,"mtime":1609144399065,"results":"28","hashOfConfig":"21"},{"size":264,"mtime":1609144469478,"results":"29","hashOfConfig":"21"},{"size":627,"mtime":1609142814126,"results":"30","hashOfConfig":"21"},{"size":1197,"mtime":1609149416950,"results":"31","hashOfConfig":"21"},{"size":1617,"mtime":1609145525491,"results":"32","hashOfConfig":"21"},{"size":1408,"mtime":1609149076614,"results":"33","hashOfConfig":"21"},{"size":1052,"mtime":1609142266174,"results":"34","hashOfConfig":"21"},{"size":1021,"mtime":1609150976807,"results":"35","hashOfConfig":"21"},{"size":559,"mtime":1609143192110,"results":"36","hashOfConfig":"21"},{"size":5598,"mtime":1609149804009,"results":"37","hashOfConfig":"21"},{"size":180,"mtime":1609143049548,"results":"38","hashOfConfig":"21"},{"size":6963,"mtime":1609150167921,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lxuqgi",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"D:\\informativeSite\\adminpanel\\src\\index.js",[],"D:\\informativeSite\\adminpanel\\src\\store.js",[],"D:\\informativeSite\\adminpanel\\src\\Pages\\Login\\Login.js",[],"D:\\informativeSite\\adminpanel\\src\\Component\\TextError\\TextError.js",[],"D:\\informativeSite\\adminpanel\\src\\utils\\config.js",[],"D:\\informativeSite\\adminpanel\\src\\reportWebVitals.js",[],["82","83"],"D:\\informativeSite\\adminpanel\\src\\Dashboard\\Sidebar\\Sidebar.js",[],"D:\\informativeSite\\adminpanel\\src\\Pages\\PageNotFound\\PageNotFound.js",[],"D:\\informativeSite\\adminpanel\\src\\Reducer\\index.js",[],"D:\\informativeSite\\adminpanel\\src\\Reducer\\alert.js",[],"D:\\informativeSite\\adminpanel\\src\\App.js",["84","85"],"import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Dashboard from \"./Pages/Home\"\nimport Login from \"./Pages/Login/Login\"\nimport PageNotFound from \"./Pages/PageNotFound/PageNotFound\"\nimport Alert from \"./Component/Alert/Alert\"\nimport MainSlider from \"./Pages/MainSlider/MainSlider\"\nimport CreateMainSlider from \"./Pages/MainSlider/CreateMainSlider\"\nfunction App() {\n  return (\n    <React.Fragment>\n      <Alert/>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              localStorage.getItem(\"accessToken\") ? (\n                <Redirect to=\"/home\" />\n              ) : (\n                <Login />\n              )\n            }\n          ></Route>\n          <Route\n            exact\n            path=\"/home\"\n            render={() =>\n              localStorage.getItem(\"accessToken\") ? (\n                <Dashboard />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n          <Route component={PageNotFound} />\n        </Switch>\n    </React.Fragment>\n  );\n}\n\n\nexport default  App;\n\n","D:\\informativeSite\\adminpanel\\src\\Dashboard\\Header\\Header.js",[],"D:\\informativeSite\\adminpanel\\src\\Pages\\Home\\index.js",[],"D:\\informativeSite\\adminpanel\\src\\Component\\Alert\\Alert.js",[],["86","87"],"D:\\informativeSite\\adminpanel\\src\\Action\\types.js",[],"D:\\informativeSite\\adminpanel\\src\\utils\\api.js",[],"D:\\informativeSite\\adminpanel\\src\\Pages\\MainSlider\\CreateMainSlider.js",["88","89"],"D:\\informativeSite\\adminpanel\\src\\Action\\message.js",[],"D:\\informativeSite\\adminpanel\\src\\Pages\\MainSlider\\MainSlider.js",["90","91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"../../Dashboard/Header/Header\";\r\nimport Sidebar from \"../../Dashboard/Sidebar/Sidebar\";\r\nimport { connect } from \"react-redux\";\r\nimport Pagination from \"../../Component/Pagination/Pagination\";\r\nimport { BsArrowUpDown , BsFillTrashFill} from \"react-icons/bs\";\r\nimport {FaPencilAlt} from  \"react-icons/fa\"\r\nimport { getPrevious, getNext, getPageMainSlider,getMainSliders,editMainSlider,deleteMainSlider } from \"../../Action/mainSlider\";\r\n\r\nconst MainSlider = ({\r\n  getMainSliders,\r\n  mainSliders,\r\n  deleteMainSlider,\r\n  editMainSlider,\r\n  count,\r\n  next,\r\n  previous,\r\n  getNext,\r\n  getPrevious,\r\n  getPageMainSlider,\r\n  loading,\r\n}) => {\r\n\r\n\r\n  //state for searching\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //for pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n \r\n \r\n\r\n  //change page\r\n  const paginate = (number) => {\r\n    getPageMainSlider({ number, postsPerPage });\r\n    setCurrentPage(number);\r\n  };\r\n\r\n  //handle Click\r\n  const handleClick = (type) => {\r\n    if (type === \"previous\") {\r\n      if (currentPage === 1) {\r\n        setCurrentPage(1);\r\n      } else {\r\n        getPrevious(previous);\r\n        setCurrentPage(currentPage - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (Math.ceil(count / postsPerPage) === currentPage) {\r\n        setCurrentPage(currentPage);\r\n      } else {\r\n        getNext(next);\r\n        setCurrentPage(currentPage + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n  //pagination end\r\n\r\n \r\n  useEffect(() => {\r\n    getMainSliders();\r\n    \r\n  }, []);\r\n\r\n  //history\r\n  const history = useHistory();\r\n\r\n  //edit function for the province\r\n  const handleEdit = (id) => {\r\n    editMainSlider(id);\r\n    history.push(\"/main-slider/create\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Header setSearch={setSearch} />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <Sidebar />\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\r\n            <nav aria-label=\"breadcrumb\">\r\n              <div className=\"container\">\r\n                <ol className=\"breadcrumb\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to=\"/home\">Home</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                   Main Slider\r\n                  </li>\r\n                </ol>\r\n              </div>\r\n            </nav>\r\n           \r\n            <Link className=\"btn btn-primary\" to=\"/main-slider/create\">\r\n              Add\r\n            </Link>\r\n            {loading && (\r\n              <div className=\"d-flex justify-content-center \">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\" mt-2\">\r\n              <table className=\"table table-hover table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">\r\n                      S.N\r\n                      <BsArrowUpDown onClick={() => handleSort(\"S.N\")} />\r\n                    </th>\r\n                    <th scope=\"col\">\r\n                      Slider Name\r\n                      <BsArrowUpDown onClick={() => handleSort(\"Province\")} />\r\n                    </th>\r\n                    <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {search === \"\"\r\n                    ? mainSliders?.length > 0 &&\r\n                      mainSliders.map((mainSlider, i) => {\r\n                        const { id, name } = mainSlider;\r\n                        return (\r\n                          <tr key={id}>\r\n                            <th scope=\"row\">\r\n                              {postsPerPage * (currentPage - 1) + (i + 1)}\r\n                            </th>\r\n                            <td>{name}</td>\r\n                            <td>\r\n                            <BsFillTrashFill\r\n                              className=\" mr-2\"\r\n                                onClick={() => deleteMainSlider(id)}\r\n                              />\r\n                              <FaPencilAlt\r\n                               \r\n                                onClick={() => handleEdit(id)}\r\n                              />\r\n                                \r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    : mainSliders?.map((mainSlider, i) => {\r\n                        const { id, name } = mainSlider;\r\n\r\n                        if (\r\n                          search === (i + 1).toString() \r\n                        ) {\r\n                          return (\r\n                            <tr key={id}>\r\n                              <th scope=\"row\"> {postsPerPage * (currentPage - 1) + (i + 1)}</th>\r\n                              <td>{name}</td>\r\n                              <td>\r\n                              <BsFillTrashFill\r\n                              className=\" mr-2\"\r\n                                onClick={() => deleteMainSlider(id)}\r\n                              />\r\n                              <FaPencilAlt\r\n                               \r\n                                onClick={() => handleEdit(id)}\r\n                              />\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                    \r\n                      })}\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <th scope=\"col\">S.N</th>\r\n                    <th scope=\"col\">Slider Name</th>\r\n                    <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n              <div className=\"row d-flex justify-content-end\">\r\n               \r\n\r\n                <Pagination\r\n                  postsPerPage={postsPerPage}\r\n                  totalPosts={count}\r\n                  paginate={paginate}\r\n                  handleClick={handleClick}\r\n                  currentPage={currentPage}\r\n                  data={mainSliders}\r\n                  setCurrentPage={setCurrentPage}\r\n                />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  mainSliders: state.MainSlider.mainSliders,\r\n  count: state.MainSlider.count,\r\n  next: state.MainSlider.next,\r\n  previous: state.MainSlider.previous,\r\n  loading: state.MainSlider.loading,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getMainSliders,\r\n  deleteMainSlider,\r\n  editMainSlider,\r\n  getPrevious,\r\n  getNext,\r\n  getPageMainSlider,\r\n})(MainSlider);\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":24},{"ruleId":"94","replacedBy":"103"},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","severity":1,"message":"105","line":15,"column":7,"nodeType":"100","messageId":"101","endLine":15,"endColumn":21},{"ruleId":"106","severity":2,"message":"107","line":147,"column":63,"nodeType":"100","messageId":"108","endLine":147,"endColumn":79},{"ruleId":"109","severity":1,"message":"110","line":67,"column":6,"nodeType":"111","endLine":67,"endColumn":8,"suggestions":"112"},{"ruleId":"106","severity":2,"message":"113","line":113,"column":53,"nodeType":"100","messageId":"108","endLine":113,"endColumn":63},{"ruleId":"106","severity":2,"message":"113","line":117,"column":53,"nodeType":"100","messageId":"108","endLine":117,"endColumn":63},{"ruleId":"114","severity":1,"message":"115","line":147,"column":56,"nodeType":"116","messageId":"117","endLine":147,"endColumn":58},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'MainSlider' is defined but never used.","Identifier","unusedVar","'CreateMainSlider' is defined but never used.",["118"],["119"],"'CreateProvince' is assigned a value but never used.","no-undef","'CreateMainSlider' is not defined.","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMainSliders'. Either include it or remove the dependency array. If 'getMainSliders' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["120"],"'handleSort' is not defined.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [getMainSliders]",{"range":"123","text":"124"},[1670,1672],"[getMainSliders]"]